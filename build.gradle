apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'eclipse'

sourceCompatibility = 1.8


mainClassName = 'rina.apps.manager.Main'

applicationName = 'tmanager'

//installApp {
//    destinationDir = file('build/install')
//}


eclipse {
    classpath {
       downloadSources=true
    }
}

repositories {
  mavenLocal();
//  flatDir {
//       dirs '../irati/package/lib'
//  }
  mavenCentral();
}

buildscript {

  repositories {
    mavenCentral();
  }

  // protobuf plugin
  dependencies {
      classpath 'com.andrewkroh.gradle:gradle-protobuf-plugin:0.4.0'
//     classpath 'com.tomcawley:gradle-protobuf-plugin:0.2'
  }
}

apply plugin: 'protobuf'

// Point to your protobuf library for compilation of the generated files
dependencies {
    // Runtime library
    compile 'com.google.protobuf:protobuf-java:2.5.+'
    compile 'commons-logging:commons-logging:1.2'
    compile group:'eu.irati', name: 'eu.irati.librina', version:'1.2.+'
    compile 'net.sf.jopt-simple:jopt-simple:4.9'
    compile 'com.googlecode.protobuf-java-format:protobuf-java-format:1.2'
    compile 'org.java-websocket:Java-WebSocket:1.3.0'
    compile 'eu.ict_pristine:pristine-dms-es:2.0.0'
    compile 'eu.ict_pristine:pristine-dms-esdsls:0.0.2'
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.4'

    testCompile group: 'junit', name: 'junit', version: 'latest.release'
    testCompile group: 'org.apache.commons', name: 'commons-lang3', version: '3.4'
    testCompile group: 'org.hamcrest', name: 'hamcrest-all', version: 'latest.release'
    testCompile group: 'org.mockito', name: 'mockito-core', version: 'latest.release'

    // And finally the important stuff
    protobuf {
      // Where to find the protofiles
      src = 'protofiles'
    }
}

jar {
    baseName = rootProject.name
    version = System.env['BUILD_NUMBER']
    version = version == null ? 0 : version
    manifest {
        attributes("Implementation-Title": baseName, "Implementation-Version": version)
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.2.1'
}

task listrepos << {
    println "Repositories:"
    project.repositories.each {
    	if (it instanceof MavenArtifactRepository) {
    		println "Name: " + it.name + "; url: " + it.url 
    	} else {  
    		println "Name: " + it.name + "; dir: " + it.dirs 
    	}
    }
}
