// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: EchoTestMessage.proto

package rina.utils.apps.echo.protobuf;

public final class EchoTestMessage {
  private EchoTestMessage() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface Echo_test_tOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional uint32 SDUsize = 1;
    /**
     * <code>optional uint32 SDUsize = 1;</code>
     *
     * <pre>
     * Size of one SDU
     * </pre>
     */
    boolean hasSDUsize();
    /**
     * <code>optional uint32 SDUsize = 1;</code>
     *
     * <pre>
     * Size of one SDU
     * </pre>
     */
    int getSDUsize();

    // optional uint32 SDUcount = 2;
    /**
     * <code>optional uint32 SDUcount = 2;</code>
     *
     * <pre>
     * Number of SDUs per direction per flow
     * </pre>
     */
    boolean hasSDUcount();
    /**
     * <code>optional uint32 SDUcount = 2;</code>
     *
     * <pre>
     * Number of SDUs per direction per flow
     * </pre>
     */
    int getSDUcount();

    // optional uint32 timeout = 3;
    /**
     * <code>optional uint32 timeout = 3;</code>
     *
     * <pre>
     * test timeout in ms
     * </pre>
     */
    boolean hasTimeout();
    /**
     * <code>optional uint32 timeout = 3;</code>
     *
     * <pre>
     * test timeout in ms
     * </pre>
     */
    int getTimeout();
  }
  /**
   * Protobuf type {@code rina.messages.Echo_test_t}
   */
  public static final class Echo_test_t extends
      com.google.protobuf.GeneratedMessage
      implements Echo_test_tOrBuilder {
    // Use Echo_test_t.newBuilder() to construct.
    private Echo_test_t(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Echo_test_t(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Echo_test_t defaultInstance;
    public static Echo_test_t getDefaultInstance() {
      return defaultInstance;
    }

    public Echo_test_t getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Echo_test_t(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              sDUsize_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              sDUcount_ = input.readUInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              timeout_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return rina.utils.apps.echo.protobuf.EchoTestMessage.internal_static_rina_messages_Echo_test_t_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return rina.utils.apps.echo.protobuf.EchoTestMessage.internal_static_rina_messages_Echo_test_t_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              rina.utils.apps.echo.protobuf.EchoTestMessage.Echo_test_t.class, rina.utils.apps.echo.protobuf.EchoTestMessage.Echo_test_t.Builder.class);
    }

    public static com.google.protobuf.Parser<Echo_test_t> PARSER =
        new com.google.protobuf.AbstractParser<Echo_test_t>() {
      public Echo_test_t parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Echo_test_t(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Echo_test_t> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional uint32 SDUsize = 1;
    public static final int SDUSIZE_FIELD_NUMBER = 1;
    private int sDUsize_;
    /**
     * <code>optional uint32 SDUsize = 1;</code>
     *
     * <pre>
     * Size of one SDU
     * </pre>
     */
    public boolean hasSDUsize() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 SDUsize = 1;</code>
     *
     * <pre>
     * Size of one SDU
     * </pre>
     */
    public int getSDUsize() {
      return sDUsize_;
    }

    // optional uint32 SDUcount = 2;
    public static final int SDUCOUNT_FIELD_NUMBER = 2;
    private int sDUcount_;
    /**
     * <code>optional uint32 SDUcount = 2;</code>
     *
     * <pre>
     * Number of SDUs per direction per flow
     * </pre>
     */
    public boolean hasSDUcount() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 SDUcount = 2;</code>
     *
     * <pre>
     * Number of SDUs per direction per flow
     * </pre>
     */
    public int getSDUcount() {
      return sDUcount_;
    }

    // optional uint32 timeout = 3;
    public static final int TIMEOUT_FIELD_NUMBER = 3;
    private int timeout_;
    /**
     * <code>optional uint32 timeout = 3;</code>
     *
     * <pre>
     * test timeout in ms
     * </pre>
     */
    public boolean hasTimeout() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint32 timeout = 3;</code>
     *
     * <pre>
     * test timeout in ms
     * </pre>
     */
    public int getTimeout() {
      return timeout_;
    }

    private void initFields() {
      sDUsize_ = 0;
      sDUcount_ = 0;
      timeout_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, sDUsize_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, sDUcount_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, timeout_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, sDUsize_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, sDUcount_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, timeout_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static rina.utils.apps.echo.protobuf.EchoTestMessage.Echo_test_t parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static rina.utils.apps.echo.protobuf.EchoTestMessage.Echo_test_t parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static rina.utils.apps.echo.protobuf.EchoTestMessage.Echo_test_t parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static rina.utils.apps.echo.protobuf.EchoTestMessage.Echo_test_t parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static rina.utils.apps.echo.protobuf.EchoTestMessage.Echo_test_t parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static rina.utils.apps.echo.protobuf.EchoTestMessage.Echo_test_t parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static rina.utils.apps.echo.protobuf.EchoTestMessage.Echo_test_t parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static rina.utils.apps.echo.protobuf.EchoTestMessage.Echo_test_t parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static rina.utils.apps.echo.protobuf.EchoTestMessage.Echo_test_t parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static rina.utils.apps.echo.protobuf.EchoTestMessage.Echo_test_t parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(rina.utils.apps.echo.protobuf.EchoTestMessage.Echo_test_t prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code rina.messages.Echo_test_t}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements rina.utils.apps.echo.protobuf.EchoTestMessage.Echo_test_tOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return rina.utils.apps.echo.protobuf.EchoTestMessage.internal_static_rina_messages_Echo_test_t_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return rina.utils.apps.echo.protobuf.EchoTestMessage.internal_static_rina_messages_Echo_test_t_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                rina.utils.apps.echo.protobuf.EchoTestMessage.Echo_test_t.class, rina.utils.apps.echo.protobuf.EchoTestMessage.Echo_test_t.Builder.class);
      }

      // Construct using rina.utils.apps.echo.protobuf.EchoTestMessage.Echo_test_t.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        sDUsize_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        sDUcount_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        timeout_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return rina.utils.apps.echo.protobuf.EchoTestMessage.internal_static_rina_messages_Echo_test_t_descriptor;
      }

      public rina.utils.apps.echo.protobuf.EchoTestMessage.Echo_test_t getDefaultInstanceForType() {
        return rina.utils.apps.echo.protobuf.EchoTestMessage.Echo_test_t.getDefaultInstance();
      }

      public rina.utils.apps.echo.protobuf.EchoTestMessage.Echo_test_t build() {
        rina.utils.apps.echo.protobuf.EchoTestMessage.Echo_test_t result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public rina.utils.apps.echo.protobuf.EchoTestMessage.Echo_test_t buildPartial() {
        rina.utils.apps.echo.protobuf.EchoTestMessage.Echo_test_t result = new rina.utils.apps.echo.protobuf.EchoTestMessage.Echo_test_t(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.sDUsize_ = sDUsize_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.sDUcount_ = sDUcount_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.timeout_ = timeout_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof rina.utils.apps.echo.protobuf.EchoTestMessage.Echo_test_t) {
          return mergeFrom((rina.utils.apps.echo.protobuf.EchoTestMessage.Echo_test_t)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(rina.utils.apps.echo.protobuf.EchoTestMessage.Echo_test_t other) {
        if (other == rina.utils.apps.echo.protobuf.EchoTestMessage.Echo_test_t.getDefaultInstance()) return this;
        if (other.hasSDUsize()) {
          setSDUsize(other.getSDUsize());
        }
        if (other.hasSDUcount()) {
          setSDUcount(other.getSDUcount());
        }
        if (other.hasTimeout()) {
          setTimeout(other.getTimeout());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        rina.utils.apps.echo.protobuf.EchoTestMessage.Echo_test_t parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (rina.utils.apps.echo.protobuf.EchoTestMessage.Echo_test_t) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional uint32 SDUsize = 1;
      private int sDUsize_ ;
      /**
       * <code>optional uint32 SDUsize = 1;</code>
       *
       * <pre>
       * Size of one SDU
       * </pre>
       */
      public boolean hasSDUsize() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 SDUsize = 1;</code>
       *
       * <pre>
       * Size of one SDU
       * </pre>
       */
      public int getSDUsize() {
        return sDUsize_;
      }
      /**
       * <code>optional uint32 SDUsize = 1;</code>
       *
       * <pre>
       * Size of one SDU
       * </pre>
       */
      public Builder setSDUsize(int value) {
        bitField0_ |= 0x00000001;
        sDUsize_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 SDUsize = 1;</code>
       *
       * <pre>
       * Size of one SDU
       * </pre>
       */
      public Builder clearSDUsize() {
        bitField0_ = (bitField0_ & ~0x00000001);
        sDUsize_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 SDUcount = 2;
      private int sDUcount_ ;
      /**
       * <code>optional uint32 SDUcount = 2;</code>
       *
       * <pre>
       * Number of SDUs per direction per flow
       * </pre>
       */
      public boolean hasSDUcount() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 SDUcount = 2;</code>
       *
       * <pre>
       * Number of SDUs per direction per flow
       * </pre>
       */
      public int getSDUcount() {
        return sDUcount_;
      }
      /**
       * <code>optional uint32 SDUcount = 2;</code>
       *
       * <pre>
       * Number of SDUs per direction per flow
       * </pre>
       */
      public Builder setSDUcount(int value) {
        bitField0_ |= 0x00000002;
        sDUcount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 SDUcount = 2;</code>
       *
       * <pre>
       * Number of SDUs per direction per flow
       * </pre>
       */
      public Builder clearSDUcount() {
        bitField0_ = (bitField0_ & ~0x00000002);
        sDUcount_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 timeout = 3;
      private int timeout_ ;
      /**
       * <code>optional uint32 timeout = 3;</code>
       *
       * <pre>
       * test timeout in ms
       * </pre>
       */
      public boolean hasTimeout() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 timeout = 3;</code>
       *
       * <pre>
       * test timeout in ms
       * </pre>
       */
      public int getTimeout() {
        return timeout_;
      }
      /**
       * <code>optional uint32 timeout = 3;</code>
       *
       * <pre>
       * test timeout in ms
       * </pre>
       */
      public Builder setTimeout(int value) {
        bitField0_ |= 0x00000004;
        timeout_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 timeout = 3;</code>
       *
       * <pre>
       * test timeout in ms
       * </pre>
       */
      public Builder clearTimeout() {
        bitField0_ = (bitField0_ & ~0x00000004);
        timeout_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:rina.messages.Echo_test_t)
    }

    static {
      defaultInstance = new Echo_test_t(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:rina.messages.Echo_test_t)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_rina_messages_Echo_test_t_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_rina_messages_Echo_test_t_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\025EchoTestMessage.proto\022\rrina.messages\"A" +
      "\n\013Echo_test_t\022\017\n\007SDUsize\030\001 \001(\r\022\020\n\010SDUcou" +
      "nt\030\002 \001(\r\022\017\n\007timeout\030\003 \001(\rB\037\n\035rina.utils." +
      "apps.echo.protobuf"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_rina_messages_Echo_test_t_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_rina_messages_Echo_test_t_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_rina_messages_Echo_test_t_descriptor,
              new java.lang.String[] { "SDUsize", "SDUcount", "Timeout", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
